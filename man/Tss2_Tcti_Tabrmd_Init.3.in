.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH TSS2_TCTI_TABRMD_INIT 3 "APRIL 2018" Intel "TPM2 Software Stack"
.SH NAME
Tss2_Tcti_Tabrmd_Init \- Initialization function for the tpm2-abrmd TCTI
library.
.SH SYNOPSIS
The
.BR Tss2_Tcti_Tabrmd_Init ()
function is used to initialize a TCTI context for communication with the
.BR tpm2-abrmd (8).
.sp
.B #include <tcti/tcti-tabrmd.h>
.sp
.BI "TSS2_RC Tss2_Tcti_Tabrmd_Init (TSS2_TCTI_CONTEXT " "*tcti_context" ", size_t " "*size" ", const char " "*conf" );
.sp
.SH DESCRIPTION
.BR Tss2_Tcti_Tabrmd_Init ()
attempts to initialize a caller allocated
.I tcti_context
of size
.I size
with configuration specified in the configuration string
.I conf.
\&. Since the
.I tcti_context
must be a caller allocated buffer, the caller needs to know the size required
by the TCTI library. The minimum size of this context can be discovered by
providing
.BR NULL
for the
.I tcti_context
and a non-
.BR NULL
.I size
parameter. The initialization function will then populate the
.I size
parameter with the minimum size of the
.I tcti_context
buffer. The caller my then allocate a buffer of this size (or larger) and
call
.B tss2_Tcti_Tabrmd_Init ()
again providing the newly allocated
.I tcti_context
and the size of this context in the
.I size
parameter. This pattern is common to all TCTI initialization functions. We
provide an example of this pattern using the
.BR Tss2_Tcti_Tabrmd_Init ()
function in the section titled
.B EXAMPLE.
.sp
The
.I conf
parameter is a string of key / value pairs describing the desired connection
properties for the TCTI. If the caller provides a NULL
.I conf
string then defaults that correspond to the defaults for the tpm2-abrmd (8)
will be used. This is the same as providing the
.I conf
string: "bus_name=com.intel.tss2.Tabrmd,bus_type=system". Keys and values
are separated by the '=' character while each key / value pair is separated by
the ',' character. The supported keys and values are:
.IP \[bu] 2
.B bus_name
- the dbus name owned by the daemon. See the tpm2-abrmd (8)
.I --dbus-name
option.
.IP \[bu]
.B bus_type
- the bus type used for the connection with the daemon. The value associated
with this key may be either "system" or "session".
.RE
.sp
Once initialized, the TCTI context returned exposes the Trusted Computing
Group (TCG) defined API for the lowest level communication with the TPM.
Using this API the caller can exchange (send / receive) TPM2 command and
response buffers with the
.B tpm2-abrmd (8).
In nearly all cases however, the caller
will initialize a context using this function before passing the context to
a higher level API like the System API (SAPI), and then never touch it again.
.sp
For a more thorough discussion of the TCTI API see the \*(lqTSS System Level
API and TPM Command Transmission Interface Specification\*(rq specification
as published by the TCG:
\%https://trustedcomputinggroup.org/tss-system-level-api-tpm-command-transmission-interface-specification/
.sp

.SH RETURN VALUE
A successful call to
.BR Tss2_Tcti_Tabrmd_Init ()
will return
.B TSS2_RC_SUCCESS.
An unsuccessful call will produce a response code described in section
.B ERRORS.
.SH ERRORS
.B TSS2_TCTI_RC_BAD_VALUE
is returned if the
.I size
parameter is NULL.
.sp
.B TSS2_TCTI_RC_NO_CONNECTION
is returned when communication with the tpm2-abrmd (8) fails.
.sp
.B TSS2_TCTI_RC_GENERAL_FAILURE
is returned for all other errors.

.SH EXAMPLE
.nf
#include <inttypes.h>
#include <stdlib.h>
#include <stdio.h>
#include <tcti/tcti-tabrmd.h>

TSS2_RC rc;
TSS2_TCTI_CONTEXT *tcti_context;
size_t size;

rc = tss2_tcti_tabrmd_init (NULL, &size, NULL,
if (rc != TSS2_RC_SUCCESS) {
    fprintf (stderr, "Failed to get allocation size for tabrmd TCTI "
             " context: 0x%" PRIx32 "\n", rc);
    exit (EXIT_FAILURE);
}
tcti_context = calloc (1, size);
if (tcti_context == NULL) {
    fprintf (stderr, "Allocation for TCTI context failed: %s\n",
             strerror (errno));
    exit (EXIT_FAILURE);
}
rc = tss2_tcti_tabrmd_init (tcti_context, &size, NULL);
if (rc != TSS2_RC_SUCCESS) {
    fprintf (stderr, "Failed to initialize tabrmd TCTI context: "
             "0x%" PRIx32 "\n", rc);
    free (tcti_context);
    exit (EXIT_FAILURE);
}
exit (EXIT_SUCCESS);
.fi
.SH AUTHOR
Philip Tricca <philip.b.tricca@intel.com>
.SH "SEE ALSO"
.BR tcti-tabrmd (7),
.BR tpm2-abrmd (8)
